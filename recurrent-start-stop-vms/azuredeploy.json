{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "defaultValue": "recurrent-start-stop-vms-la",
      "metadata": {
        "description": "The name of the logic app to create."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "timeZone": {
      "type": "string",
      "defaultValue": "Central Standard Time",
      "metadata": {
        "description": "Time Zone for your Logic App recurrant trigger."
      }
    }
  },
  "variables": {
    "singleQuote": "'",
    "roleDefinitionId": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
  },
  "resources": [
    {
      "name": "arm",
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('location')]",
      "kind": "V1",
      "properties": {
        "api": {
          "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/arm')]"
        },
        "parameterValueType": "Alternative",
        "alternativeParameterValues": {},
        "displayName": "logic-app-identity"
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', 'arm')]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "timeZone": {
              "defaultValue": "[parameters('timeZone')]",
              "type": "String"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Week",
                "interval": 1,
                "schedule": {
                  "hours": [
                    "8",
                    "19"
                  ],
                  "minutes": [
                    0
                  ],
                  "weekDays": [
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday"
                  ]
                },
                "timeZone": "@parameters('timeZone')"
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Variable_to_determine_action:_Start_(AM)_or_Stop_(PM)": {
              "inputs": {
                "variables": [
                  {
                    "name": "action",
                    "type": "string",
                    "value": "@{if(equals(convertFromUtc(utcNow(), parameters('timeZone'), 'tt'), 'AM'), 'start', 'deallocate')}"
                  }
                ]
              },
              "runAfter": {},
              "type": "InitializeVariable"
            },
            "List_VMs_in_Resource_Group": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['arm']['connectionId']"
                  }
                },
                "method": "get",
                "path": "[concat('/subscriptions/@{encodeURIComponent(', variables('singleQuote'), subscription().subscriptionId, variables('singleQuote'), ')}/resourceGroups/@{encodeURIComponent(', variables('singleQuote'), resourceGroup().name, variables('singleQuote'), ')}/resources')]",
                "queries": {
                  "$filter": "resourceType eq 'Microsoft.Compute/virtualMachines'",
                  "x-ms-api-version": "2016-06-01"
                }
              },
              "runAfter": {
                "Variable_to_determine_action:_Start_(AM)_or_Stop_(PM)": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection"
            },
            "For_each_VM": {
              "actions": {
                "Start_or_Stop_VM": {
                  "inputs": {
                    "authentication": {
                      "type": "ManagedServiceIdentity"
                    },
                    "method": "POST",
                    "uri": "@{concat('https://management.azure.com', items('For_each_VM')?['id'], '/', variables('action'), '?api-version=2020-12-01')}"
                  },
                  "runAfter": {},
                  "type": "Http"
                }
              },
              "foreach": "@body('List_VMs_in_Resource_Group')?['value']",
              "runAfter": {
                "List_VMs_in_Resource_Group": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "arm": {
                "connectionId": "[concat(resourceGroup().id,'/providers/Microsoft.Web/connections/arm')]",
                "connectionName": "arm",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                },
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/arm')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[guid(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), variables('roleDefinitionID'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId'))]",
        "principalId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '2019-05-01', 'Full').identity.principalId]",
        "scope": "[resourceGroup().id]"
      }
    }
  ],
  "outputs": {
    "logicAppIdentity": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '2019-05-01', 'Full').identity.principalId]"
    }
  }
}